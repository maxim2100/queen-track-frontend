version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: queen-track-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - queen-track-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`queen-track.local`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  # Optional: Reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: queen-track-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
    restart: unless-stopped
    networks:
      - queen-track-network

networks:
  queen-track-network:
    driver: bridge

# Development override
---
version: "3.8"

# docker-compose.override.yml for development
services:
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: queen-track-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    stdin_open: true
    tty: true
# localhost override
---
version: "3.8"

services:
  frontend-local:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: queen-track-frontend-local
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    stdin_open: true
    tty: true